<div class="container mt-0">
    <div id="alertPlaceholder"></div>

    <form id="pedidoForm" action="/pedido/register" method="POST">
        <div class="input-group input-group-sm mb-3 ">
            <div class="input-group-prepend">
                <span class="input-group-text">Cliente</span>
            </div>
            <div class="mb-3">
                <!--input type="text" class="form-control" id="cliente" name="cliente" required/-->
                <input list="clientes" name="cliente" type="text" class="form-control" id="cliente"
                    style="width: 410px;" required />
                <div class="alert alert-warning mt-0 d-none" id="usernameAlert" role="alert">Cliente no existe!
                </div>
                <datalist id="clientes"> </datalist>
            </div>

            <script>
                fetch('/clientes')
                    .then(response => response.json())
                    .then(data => {
                        const dropdownMenu = document.getElementById('clientes');
                        dropdownMenu.innerHTML = ''; // Clear existing items if any

                        let dataName = []; // Ensure data is an array
                        data.forEach(item => {
                            dataName.push(item.nombre);
                        });

                        dataName.sort();
                        dropdownMenu.innerHTML = `<option value="${dataName.join('"> <option value="')}"></option>`;

                        document.body.appendChild(dropdownMenu);

                        const inputElements = document.getElementById('cliente');

                        inputElements.addEventListener('blur', (event) => {

                            if (!dataName.includes(event.target.value)) {
                                usernameAlert.classList.remove('d-none');
                            }
                            else {
                                usernameAlert.classList.add('d-none');
                            }
                        });
                    })
                    .catch(error => {
                        console.error('Error fetching data:', error);
                    });
            </script>

            <div class="input-group input-group-sm mb-3 ">
                <div class="input-group-prepend">
                    <span class="input-group-text">Producto</span>
                </div>
                <input type="text" class="form-control" id="producto" name="producto" required />
            </div>

            <div class="input-group input-group-sm mb-3 ">
                <div class="input-group-prepend">
                    <span class="input-group-text">Cantidad</span>
                </div>
                <input type="number" class="form-control" id="cantidad" name="cantidad" min="1" required />
            </div>

            <div class="input-group input-group-sm mb-3 ">
                <div class="input-group-prepend">
                    <span class="input-group-text">Precio $</span>
                </div>
                <input type="number" class="form-control" id="precio" name="precio" min="1" required />
            </div>

            <div class="input-group input-group-sm mb-3 ">
                <div class="input-group-prepend">
                    <span class="input-group-text">Ciclo</span>
                </div>
                <input type="text" class="form-control" id="ciclo" name="ciclo" required />
            </div>

            <div class="text-center">
                <button id="submitBtn" class="search-btn" data-bs-dismiss="offcanvas">Submit</button>
            </div>
    </form>
</div>

<!-- Bootstrap JS (for alerts) -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

<script>
    (function () {
        const form = document.getElementById("pedidoForm");
        const submitBtn = document.getElementById("submitBtn");
        const alertPlaceholder = document.getElementById("alertPlaceholder");

        const pedidoOffcanvasEl = document.getElementById("pedidoOffcanvas");
        const pedidoOffcanvas = pedidoOffcanvasEl ? bootstrap.Offcanvas.getOrCreateInstance(pedidoOffcanvasEl) : null;

        // Safe alert function
        function showAlert(type, msg) {
            const wrapper = document.createElement("div");
            wrapper.innerHTML = `
                    <div class="alert alert-${type} alert-dismissible fade show" role="alert">${msg}
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>`;
            alertPlaceholder.append(wrapper);

            // Auto-close after 3 seconds
            setTimeout(() => {
                const alertNode = bootstrap.Alert.getOrCreateInstance(wrapper.querySelector(".alert"));
                alertNode.close();
            }, 3000);
        }

        // Handle form submission
        form.addEventListener("submit", async (e) => {
            e.preventDefault();
            submitBtn.disabled = true;

            const payload = {
                cliente: form.cliente.value.trim(),
                producto: form.producto.value.trim(),
                cantidad: form.cantidad.value.trim(),
                precio: form.precio.value.trim(),
                ciclo: form.ciclo.value.trim(),
                year: new Date().getFullYear(),
                total: parseFloat(form.cantidad.value) * parseFloat(form.precio.value)
            };

            try {
                const res = await fetch("/pedido/register", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify(payload),
                });

                const json = await res.json().catch(() => ({}));

                if (res.ok) {
                    showAlert("success", json.message || "Pedido registrado correctamente.");
                    form.reset();

                    // refresh grid rows from server (keeps it simple and in sync)
                    fetch('/clientes')
                        .then(r => r.json())
                        .then((data) => { gridApi.setGridOption("rowData", data); });
                } else {
                    showAlert("danger", json.error || json.message || "Error al registrar Pedido.");
                    form.reset();
                }
            } catch (err) {
                showAlert("danger", err.message || "Error de red, intente nuevamente.");
                form.reset();
            } finally {
                submitBtn.disabled = false;
            }

        });
    })();   
</script>